/*
* 三角形题目
* 进行开根号运算求边长，然后再平方进行判断
* 忽视了底层二进制编码会丢失开方后的部分数值（尤其是小数部分），导致开方后再平方数值并不会相同
* 
* 测试用例：
* 输入：
* -1769 9067
* -5216 2524
* 1327 -923
* 输出：
* 0 1 1
* 
* 验证方式：
* 在计算边长的平方和开方运算处打入断点，比较数值是否有出入
*/
//#include<iostream>
//#include<stdio.h>
//#include<cmath>
//
//using namespace std;
//int main()
//{
//    unsigned int a = 0, b = 0;
//    unsigned int a1 = 0, b1 = 0;
//    unsigned int a2 = 0, b2 = 0;
//    double d = 0, d1 = 0, d2 = 0;
//    cin >> a >> b;
//    cin >> a1 >> b1;
//    cin >> a2 >> b2;
//
//    unsigned int d_2, d1_2, d2_2;
//    d_2 = (a - a1) * (a - a1) + (b - b1) * (b - b1);
//    d1_2 = (a - a2) * (a - a2) + (b - b2) * (b - b2);
//    d2_2 = (a1 - a2) * (a1 - a2) + (b1 - b2) * (b1 - b2);
//
//    d = sqrt(d_2);
//    d1 = sqrt(d1_2);
//    d2 = sqrt(d2_2);
//
//    unsigned int dd_2, dd1_2, dd2_2;
//    dd_2 = d * d;
//    dd1_2 = d1 * d1;
//    dd2_2 = d2 * d2;
//
//    int m = 0;
//    int n = 0;
//    int p = 0;
//
//    if ((dd_2 + dd1_2 < dd2_2) || (dd_2 + dd2_2 < dd1_2) || (dd1_2 + dd2_2 < dd_2))
//    {
//        m = m + 1;
//    }
//    if ((d == d1) || (d1 == d2) || (d2 == d))
//    {
//        n = n + 1;
//    }
//    if ((dd_2 + dd1_2 == dd2_2) || (dd_2 + dd2_2 == dd1_2) || (dd1_2 + dd2_2 == dd_2))
//    {
//        p = p + 1;
//    }
//
//    cout << m << " " << n << " " << p << endl;
//    return 0;
//}

